{"version":3,"sources":["../src/util.js"],"names":["api","pagination","aggregatePagination","fetchOptions","method","headers","Object","assign","params","format","action","redirects","apiOptions","apiUrl","stringify","qs","url","then","res","json","results","parseResults","query","srsearch","keys","filter","continueType","continueKey","resolution","next","previousResults"],"mappings":"4EAUgBA,G,CAAAA,G,SAWAC,U,CAAAA,U,SAkBAC,mB,CAAAA,mB,CAvChB,mM,iNAGA,GAAMC,cAAe,CACpBC,OAAQ,KADY,CAEpBC,+FAFoB,CAArB,CAOO,QAASL,IAAT,GAAsC,iEACtC,EAAKM,OAAOC,MAAP,IAAkBC,CAAlB,CAA0B,CACpCC,OAAQ,MAD4B,CAEpCC,OAAQ,OAF4B,CAIpCC,UAAW,EAJyB,CAA1B,CADiC,CAOtC,EAASC,EAAWC,MAApB,KAA8B,sBAAYC,SAAZ,CAAsBC,CAAtB,CAPQ,CAQ5C,MAAO,8BAAMC,CAAN,CAAWb,YAAX,EAAyBc,IAAzB,CAA8B,kBAAOC,GAAIC,IAAJ,EAAP,CAA9B,CACP,CAEM,QAASlB,WAAT,OAAsD,CAC5D,MAAOD,KAAIY,CAAJ,CAAgBJ,CAAhB,EACLS,IADK,CACA,WAAO,CACZ,GAAI,GAAa,CACNG,OADM,CACIC,EAAaH,CAAb,CADJ,CAENI,KAFM,CAEEd,EAAOe,QAFT,CAAjB,CAGA,GAAIL,EAAI,UAAJ,CAAJ,CAAqB,CACpB,GAAM,GAAeZ,OACnBkB,IADmB,CACdN,EAAI,UAAJ,CADc,EAEnBO,MAFmB,CAEZ,kBAAe,UAAR,IAAP,CAFY,EAEe,CAFf,CAArB,CAGM,EAAcP,EAAI,UAAJ,EAAgBQ,CAAhB,CAHpB,CAIAlB,EAAOkB,CAAP,EAAuBC,CALH,CAMpBC,EAAWC,IAAX,CAAkB,iBAAM5B,YAAWW,CAAX,CAAuBJ,CAAvB,CAA+Ba,CAA/B,CAAN,CAClB,CACD,MAAOO,EACP,CAdK,CAeP,CAEM,QAAS1B,oBAAT,GAA+D,iEACrE,MAAOD,GACLgB,IADK,CACA,WAAO,CACZ,GAAM,gCAAca,CAAd,qBAAkCZ,EAAIE,OAAtC,EAAN,CADY,MAERF,GAAIW,IAFI,CAGJ3B,oBAAoBgB,EAAIW,IAAJ,EAApB,CAAgCT,CAAhC,CAHI,CAKJA,CAER,CARK,CASP","file":"util.js","sourcesContent":["import fetch from 'isomorphic-fetch';\nimport querystring from 'querystring';\n\nconst fetchOptions = {\n\tmethod: 'GET',\n\theaders: {\n\t\t'User-Agent': 'WikiJs/0.1 (https://github.com/dijs/wiki; richard.vanderdys@gmail.com)'\n\t}\n};\n\nexport function api(apiOptions, params = {}) {\n\tconst qs = Object.assign({}, params, {\n\t\tformat: 'json',\n\t\taction: 'query',\n\t\t// origin: '*',\n\t\tredirects: ''\n\t});\n\tconst url = `${apiOptions.apiUrl}?${querystring.stringify(qs)}`;\n\treturn fetch(url, fetchOptions).then(res => res.json());\n}\n\nexport function pagination(apiOptions, params, parseResults) {\n\treturn api(apiOptions, params)\n\t\t.then(res => {\n\t\t\tlet resolution = {};\n\t\t\tresolution.results = parseResults(res);\n\t\t\tresolution.query = params.srsearch;\n\t\t\tif (res['continue']) {\n\t\t\t\tconst continueType = Object\n\t\t\t\t\t.keys(res['continue'])\n\t\t\t\t\t.filter(key => key !== 'continue')[0];\n\t\t\t\tconst continueKey = res['continue'][continueType];\n\t\t\t\tparams[continueType] = continueKey;\n\t\t\t\tresolution.next = () => pagination(apiOptions, params, parseResults);\n\t\t\t}\n\t\t\treturn resolution;\n\t\t});\n}\n\nexport function aggregatePagination(pagination, previousResults = []) {\n\treturn pagination\n\t\t.then(res => {\n\t\t\tconst results = [...previousResults, ...res.results];\n\t\t\tif (res.next) {\n\t\t\t\treturn aggregatePagination(res.next(), results);\n\t\t\t} else {\n\t\t\t\treturn results;\n\t\t\t}\n\t\t});\n}\n"]}